%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Markdown Extended Dev
file_extensions: [mkdown, mdown, markdown, markdn, md.hbs, md]
scope: text.html.markdown

contexts:
  # lookahead for front-matter
  main:
    - match: (?=\A-{3}(\w*)[^\S\n]*$)
      push: front-matter
    - match: ""
      set: body

  # begin front-matter
  front-matter:
    - match: ^---(ya?ml)? *$
      captures:
        1: punctuation.definition.fenced.yaml
        2: variable.language.fenced.yaml
      with_prototype:
        - include: scope:source.yaml#prototype
      push:
        - meta_scope: markup.raw.yaml.front-matter
        - meta_content_scope: source.yaml
        - match: ^(?:-|\.){3} *$
          pop: true
        - include: scope:source.yaml

    - match: ^---(js|javascript)? *$
      captures:
        1: punctuation.definition.fenced.js
        2: variable.language.fenced.js
      with_prototype:
        - include: scope:source.js#prototype
      push:
        - meta_scope: markup.raw.js.front-matter
        - meta_content_scope: source.js
        - match: ^(?:-|\.){3} *$
          pop: true
        - include: scope:source.js

    - match: ^---coffee *$
      captures:
        1: punctuation.definition.fenced.coffee
        2: variable.language.fenced.coffee
      with_prototype:
        - include: scope:source.coffee#prototype
      push:
        - meta_scope: markup.raw.coffee.front-matter
        - meta_content_scope: source.coffee
        - match: ^(?:-|\.){3} *$
          pop: true
        - include: scope:source.coffee

    - match: ^---json *$
      captures:
        1: punctuation.definition.fenced.json
        2: variable.language.fenced.json
      with_prototype:
        - include: scope:source.json#prototype
      push:
        - meta_scope: markup.raw.json.front-matter
        - meta_content_scope: source.json
        - match: ^(?:-|\.){3} *$
          pop: true
        - include: scope:source.json

    - match: $^
      pop: true
      set: body

  # begin body
  body:
    - match: |-
        (?x)^
        (?= [ ]{,3}>.
        | ([ ]{4}|\t)(?!$)
        | [#]{1,6}\s*+
        | [ ]{,3}(?<marker>[-*_])([ ]{,2}\k<marker>){2,}[^\S\n]*+$
        )
      comment: "We could also use an empty end match and set applyEndPatternLast, but then we must be sure that the begin pattern will only match stuff matched by the sub-patterns."
      push:
        - meta_scope: meta.block-level.markdown
        - match: |-
            (?x)^
            (?! [ ]{,3}>.
            | ([ ]{4}|\t)
            | [#]{1,6}\s*+
            | [ ]{,3}(?<marker>[-*_])([ ]{,2}\k<marker>){2,}[^\S\n]*+$
            )
          pop: true
        - include: block_quote
        - include: block_raw
        - include: heading
        - include: separator

    
    # fenced markdown: applescript
    - match: '(```|~~~|{%\s*highlight)\s*(applescript)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.applescript
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.applescript
    
    # fenced markdown: asp
    - match: '(```|~~~|{%\s*highlight)\s*(asp)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.asp
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.asp
    
    # fenced markdown: bash
    - match: '(```|~~~|{%\s*highlight)\s*(bash|sh|shell)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.shell
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.shell
    
    # fenced markdown: bibtex
    - match: '(```|~~~|{%\s*highlight)\s*(bibtex)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.bibtex
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.bibtex
    
    # fenced markdown: c
    - match: '(```|~~~|{%\s*highlight)\s*(c)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.c
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.c
    
    # fenced markdown: clojure
    - match: '(```|~~~|{%\s*highlight)\s*(clojure)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.clojure
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.clojure
    
    # fenced markdown: cmake
    - match: '(```|~~~|{%\s*highlight)\s*(cmake)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.cmake
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.cmake
    
    # fenced markdown: coffee
    - match: '(```|~~~|{%\s*highlight)\s*(coffee|coffeescript)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.coffee
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.coffee
    
    # fenced markdown: cpp
    - match: '(```|~~~|{%\s*highlight)\s*(cpp)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.c++
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.c++
    
    # fenced markdown: csharp
    - match: '(```|~~~|{%\s*highlight)\s*(csharp)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.cs
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.cs
    
    # fenced markdown: css
    - match: '(```|~~~|{%\s*highlight)\s*(css)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.css
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.css
    
    # fenced markdown: d
    - match: '(```|~~~|{%\s*highlight)\s*(d)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.d
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.d
    
    # fenced markdown: ddl
    - match: '(```|~~~|{%\s*highlight)\s*(ddl|dml|mysql|sql)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.sql
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.sql
    
    # fenced markdown: diff
    - match: '(```|~~~|{%\s*highlight)\s*(diff)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.diff
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.diff
    
    # fenced markdown: dockerfile
    - match: '(```|~~~|{%\s*highlight)\s*(dockerfile)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.dockerfile
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.dockerfile
    
    # fenced markdown: dosbatch
    - match: '(```|~~~|{%\s*highlight)\s*(dosbatch)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.dosbatch
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.dosbatch
    
    # fenced markdown: dot
    - match: '(```|~~~|{%\s*highlight)\s*(dot)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.dot
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.dot
    
    # fenced markdown: editorconfig
    - match: '(```|~~~|{%\s*highlight)\s*(editorconfig)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.ini.editorconfig
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.ini.editorconfig
    
    # fenced markdown: ejs
    - match: '(```|~~~|{%\s*highlight)\s*(ejs|lodash|underscore)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.ejs
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.ejs
    
    # fenced markdown: erb
    - match: '(```|~~~|{%\s*highlight)\s*(erb|html\+ruby|rails)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.html.ruby
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.html.ruby
    
    # fenced markdown: erlang
    - match: '(```|~~~|{%\s*highlight)\s*(erlang)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.erlang
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.erlang
    
    # fenced markdown: git
    - match: '(```|~~~|{%\s*highlight)\s*(git)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.git
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.git
    
    # fenced markdown: go
    - match: '(```|~~~|{%\s*highlight)\s*(go|golang)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.go
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.go
    
    # fenced markdown: gradle
    - match: '(```|~~~|{%\s*highlight)\s*(gradle)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.gradle
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.gradle
    
    # fenced markdown: graphql
    - match: '(```|~~~|{%\s*highlight)\s*(graphql)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.graphql
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.graphql
    
    # fenced markdown: groovy
    - match: '(```|~~~|{%\s*highlight)\s*(groovy)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.groovy
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.groovy
    
    # fenced markdown: gruntfile.coffee
    - match: '(```|~~~|{%\s*highlight)\s*(gruntfile\.coffee)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.gruntfile.coffee
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.gruntfile.coffee
    
    # fenced markdown: gruntfile.js
    - match: '(```|~~~|{%\s*highlight)\s*(gruntfile\.js)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.gruntfile.js
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.gruntfile.js
    
    # fenced markdown: gulpfile.coffee
    - match: '(```|~~~|{%\s*highlight)\s*(gulpfile\.coffee)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.gulpfile.coffee
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.gulpfile.coffee
    
    # fenced markdown: gulpfile.js
    - match: '(```|~~~|{%\s*highlight)\s*(gulpfile\.js)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.gulpfile.js
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.gulpfile.js
    
    # fenced markdown: haml
    - match: '(```|~~~|{%\s*highlight)\s*(haml)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.haml
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.haml
    
    # fenced markdown: handlebars
    - match: '(```|~~~|{%\s*highlight)\s*(handlebars|hbs|html|html5)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.html.basic
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.html.basic
        - include: scope:text.html.handlebars
    
    # fenced markdown: haskell
    - match: '(```|~~~|{%\s*highlight)\s*(haskell)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.haskell
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.haskell
    
    # fenced markdown: ini
    - match: '(```|~~~|{%\s*highlight)\s*(ini)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.ini
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.ini
    
    # fenced markdown: jade
    - match: '(```|~~~|{%\s*highlight)\s*(jade)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.jade
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.jade
    
    # fenced markdown: java
    - match: '(```|~~~|{%\s*highlight)\s*(java)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.java
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.java
    
    # fenced markdown: javadoc
    - match: '(```|~~~|{%\s*highlight)\s*(javadoc)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.html.javadoc
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.html.javadoc
    
    # fenced markdown: javascript
    - match: '(```|~~~|{%\s*highlight)\s*(javascript|js)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.js
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.js
    
    # fenced markdown: jl
    - match: '(```|~~~|{%\s*highlight)\s*(jl|julia)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.julia
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.julia
    
    # fenced markdown: json
    - match: '(```|~~~|{%\s*highlight)\s*(json)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.json
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.json
    
    # fenced markdown: jsx
    - match: '(```|~~~|{%\s*highlight)\s*(jsx)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.jsx
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.jsx
    
    # fenced markdown: latex
    - match: '(```|~~~|{%\s*highlight)\s*(latex)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.tex.latex
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.tex.latex
    
    # fenced markdown: less
    - match: '(```|~~~|{%\s*highlight)\s*(less)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.less
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.less
    
    # fenced markdown: liquid
    - match: '(```|~~~|{%\s*highlight)\s*(liquid|swig)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.html.swig
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.html.swig
    
    # fenced markdown: LiveScript
    - match: '(```|~~~|{%\s*highlight)\s*(LiveScript|livescript|ls)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.livescript
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.livescript
    
    # fenced markdown: lua
    - match: '(```|~~~|{%\s*highlight)\s*(lua)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.lua
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.lua
    
    # fenced markdown: makefile
    - match: '(```|~~~|{%\s*highlight)\s*(makefile)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.makefile
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.makefile
    
    # fenced markdown: markdown
    - match: '(```|~~~|{%\s*highlight)\s*(markdown|md)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.html.multimarkdown
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.html.multimarkdown
    
    # fenced markdown: math
    - match: '(```|~~~|{%\s*highlight)\s*(math)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.tex.math
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.tex.math
    
    # fenced markdown: matlab
    - match: '(```|~~~|{%\s*highlight)\s*(matlab)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.matlab
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.matlab
    
    # fenced markdown: mustache
    - match: '(```|~~~|{%\s*highlight)\s*(mustache)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.html.mustache
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.html.mustache
    
    # fenced markdown: nginx
    - match: '(```|~~~|{%\s*highlight)\s*(nginx)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.nginx
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.nginx
    
    # fenced markdown: objc
    - match: '(```|~~~|{%\s*highlight)\s*(objc|objective-c)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.objc
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.objc
    
    # fenced markdown: objc++
    - match: '(```|~~~|{%\s*highlight)\s*(objc\+\+|objective-c\+\+)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.objc++
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.objc++
    
    # fenced markdown: ocaml
    - match: '(```|~~~|{%\s*highlight)\s*(ocaml)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.ocaml
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.ocaml
    
    # fenced markdown: ocamllex
    - match: '(```|~~~|{%\s*highlight)\s*(ocamllex)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.ocamllex
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.ocamllex
    
    # fenced markdown: ocamlyacc
    - match: '(```|~~~|{%\s*highlight)\s*(ocamlyacc)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.ocamlyacc
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.ocamlyacc
    
    # fenced markdown: pascal
    - match: '(```|~~~|{%\s*highlight)\s*(pascal)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.pascal
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.pascal
    
    # fenced markdown: perl
    - match: '(```|~~~|{%\s*highlight)\s*(perl)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.perl
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.perl
    
    # fenced markdown: pgsql
    - match: '(```|~~~|{%\s*highlight)\s*(pgsql|postgres|postgresql)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.pgsql
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.pgsql
    
    # fenced markdown: php
    - match: '(```|~~~|{%\s*highlight)\s*(php)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.php
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.php
    
    # fenced markdown: plain
    - match: '(```|~~~|{%\s*highlight)\s*(plain)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.plain
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.plain
    
    # fenced markdown: procfile
    - match: '(```|~~~|{%\s*highlight)\s*(procfile)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.procfile
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.procfile
    
    # fenced markdown: puppet
    - match: '(```|~~~|{%\s*highlight)\s*(puppet)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.puppet
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.puppet
    
    # fenced markdown: python
    - match: '(```|~~~|{%\s*highlight)\s*(python)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.python
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.python
    
    # fenced markdown: regexp
    - match: '(```|~~~|{%\s*highlight)\s*(regexp)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.regexp
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.regexp
    
    # fenced markdown: regexp.pyjade
    - match: '(```|~~~|{%\s*highlight)\s*(regexp\.pyjade)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.pyjade
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.pyjade
    
    # fenced markdown: regexp.python
    - match: '(```|~~~|{%\s*highlight)\s*(regexp\.python)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.regexp.python
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.regexp.python
    
    # fenced markdown: ruby
    - match: '(```|~~~|{%\s*highlight)\s*(ruby)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.ruby
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.ruby
    
    # fenced markdown: rust
    - match: '(```|~~~|{%\s*highlight)\s*(rust)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.rust
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.rust
    
    # fenced markdown: sass
    - match: '(```|~~~|{%\s*highlight)\s*(sass)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.sass
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.sass
    
    # fenced markdown: scala
    - match: '(```|~~~|{%\s*highlight)\s*(scala)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.scala
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.scala
    
    # fenced markdown: scss
    - match: '(```|~~~|{%\s*highlight)\s*(scss)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.scss
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.scss
    
    # fenced markdown: styl
    - match: '(```|~~~|{%\s*highlight)\s*(styl)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.stylus
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.stylus
    
    # fenced markdown: swift
    - match: '(```|~~~|{%\s*highlight)\s*(swift)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.swift
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.swift
    
    # fenced markdown: tex
    - match: '(```|~~~|{%\s*highlight)\s*(tex)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.tex
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.tex
    
    # fenced markdown: textile
    - match: '(```|~~~|{%\s*highlight)\s*(textile)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.html.textile
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.html.textile
    
    # fenced markdown: todo
    - match: '(```|~~~|{%\s*highlight)\s*(todo)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.todo
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.todo
    
    # fenced markdown: twig
    - match: '(```|~~~|{%\s*highlight)\s*(twig)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.html.twig
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.html.twig
    
    # fenced markdown: xml
    - match: '(```|~~~|{%\s*highlight)\s*(xml)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.xml
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.xml
    
    # fenced markdown: xml
    - match: '(```|~~~|{%\s*highlight)\s*(xml)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: text.xml
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:text.xml
    
    # fenced markdown: yaml
    - match: '(```|~~~|{%\s*highlight)\s*(yaml)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.yaml
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.yaml

    # fenced markdown: generic
    - match: '(```|~~~|{%\s*highlight)\s*(\w*)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true

    # fenced markdown: r
    - match: '(```|~~~)\s*\{?\s*(r)(?:[ \},].*$|\}?$)'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - meta_content_scope: source.r
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - include: scope:source.r

    # fenced markdown: rails
    - match: '(```|~~~|{%\s*highlight)\s*(rails|erb|html\+ruby)\s*((?:linenos\s*)?%})?$'
      captures:
        1: punctuation.definition.fenced.markdown
        2: variable.language.fenced.markdown
        3: punctuation.definition.fenced.markdown
      push:
        - meta_scope: markup.raw.block.markdown markup.raw.block.fenced.markdown
        - match: '(```|~~~|{%\s*endhighlight\s*%})\n'
          captures:
            1: punctuation.definition.fenced.markdown
            2: variable.language.fenced.markdown
            3: punctuation.definition.fenced.markdown
          pop: true
        - match: ''
          push:
            - meta_content_scope: text.html.ruby
            - include: scope:text.html.ruby
          with_prototype:
            - match: '(?=(```|~~~|{%\s*endhighlight\s*%})\n)'
              pop: true

    # lists
    - match: '^[ ]{0,3}([*+-])(?=\s)'
      captures:
        1: punctuation.definition.list_item.markdown
      push:
        - meta_scope: markup.list.unnumbered.markdown
        - match: ^(?=\S)
          captures:
            1: punctuation.definition.list_item.markdown
          pop: true
        - include: list-paragraph
    - match: '^[ ]{0,3}([0-9]+)(\.)(?=\s)'
      captures:
        1: punctuation.definition.list_item.markdown punctuation.definition.list_item.number.markdown
        2: punctuation.definition.list_item.markdown
      push:
        - meta_scope: markup.list.numbered.markdown
        - match: ^(?=\S)
          captures:
            1: punctuation.definition.list_item.markdown punctuation.definition.list_item.number.markdown
            2: punctuation.definition.list_item.markdown
          pop: true
        - include: list-paragraph

    # html tags
    - match: '^(?=<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\b)(?!.*?</\1>)'
      comment: Markdown formatting is disabled inside block-level tags.
      push:
        - meta_scope: meta.disable-markdown
        - match: (?<=^</\1>$\n)
          pop: true
        - include: scope:text.html.basic
        - include: scope:text.html.handlebars

    - match: '^(?=<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\b)'
      comment: Same rule but for one line disables.
      push:
        - meta_scope: meta.disable-markdown
        - match: $\n?
          pop: true
        - include: scope:text.html.basic
        - include: scope:text.html.handlebars
    - match: (?x:\s*(\[)(.+?)(\])(:)(?:[^\S\n]*(<?)(\S+?)(>?))?[^\S\n]*(?:((\().+?(\)))|((").+?(")))?\s*$)
    # - match: |-
    #     (?x:
    #       \s*           # Leading whitespace
    #       (\[)(.+?)(\])(:)    # Reference name
    #       [^\S\n]*          # Optional whitespace
    #       (<?)(\S+?)(>?)      # The url
    #       [^\S\n]*          # Optional whitespace
    #       (?:
    #           ((\().+?(\)))   # Match title in quotes…
    #         | ((").+?("))   # or in parens.
    #       )?            # Title is optional
    #       \s*           # Optional whitespace
    #       $
    #     )
      scope: meta.link.reference.def.markdown
      captures:
        1: punctuation.definition.constant.markdown
        2: constant.other.reference.link.markdown
        3: punctuation.definition.constant.markdown
        4: punctuation.separator.key-value.markdown
        5: punctuation.definition.link.markdown
        6: markup.underline.link.markdown
        7: punctuation.definition.link.markdown
        8: string.other.link.description.title.markdown
        9: punctuation.definition.string.begin.markdown
        10: punctuation.definition.string.end.markdown
        11: string.other.link.description.title.markdown
        12: punctuation.definition.string.begin.markdown
        13: punctuation.definition.string.end.markdown
    - match: '^(?=\S)(?![=-]{3,}(?=$))'
      push:
        - meta_scope: meta.paragraph.markdown
        - include: html_comment
        - match: '^(?:\s*$|(?=[ ]{,3}>.))|(?=[^\S\n]*\n)(?<=^===|^====|=====|^---|^----|-----)[^\S\n]*\n|(?=^#)'
          pop: true
        - include: inline
        - include: scope:text.html.handlebars
        - match: '^(={3,})(?=[^\S\n]*$)'
          scope: markup.heading.1.markdown
          captures:
            1: punctuation.definition.heading.markdown
        - match: '^(-{3,})(?=[^\S\n]*$)'
          scope: markup.heading.2.markdown
          captures:
            1: punctuation.definition.heading.markdown

  html_comment:
    - match: <!--
      captures:
        0: punctuation.definition.comment.html
      push:
        - meta_scope: comment.block.html
        - match: '--\s*>'
          pop: true
        - match: '--'
          scope: invalid.illegal.bad-comments-or-CDATA.html
  ampersand:
    - comment: "Markdown will convert this for us. We match it so that the HTML grammar will not mark it up as invalid."
      match: '&(?!([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);)'
      scope: meta.other.valid-ampersand.markdown

  block_quote:
    - comment: "We terminate the block quote when seeing an empty line, a separator or a line with leading > characters. The latter is to “reset” the quote level for quoted lines."
      match: '\G[ ]{,3}(>)(?!$)[ ]?'
      captures:
        1: punctuation.definition.blockquote.markdown
      push:
        - meta_scope: markup.quote.markdown
        - match: |-
            (?x)^
            (?= \s*$
            | [ ]{,3}(?<marker>[-*_])([ ]{,2}\k<marker>){2,}[^\S\n]*+$
            | [ ]{,3}>.
            )
          pop: true
        - match: \G(?= [ ]{,3}>.)
          push:
            - match: ^
              pop: true
            - include: block_quote
        - match: |-
            (?x)\G
            (?= ([ ]{4}|\t)
            | [#]{1,6}\s*+
            | [ ]{,3}(?<marker>[-*_])([ ]{,2}\k<marker>){2,}[^\S\n]*+$
            )
          push:
            - include: block_raw
            - include: heading
            - include: separator
            - match: ^
              pop: true
        - match: |-
            (?x)\G
            (?! $
            | [ ]{,3}>.
            | ([ ]{4}|\t)
            | [#]{1,6}\s*+
            | [ ]{,3}(?<marker>[-*_])([ ]{,2}\k<marker>){2,}[^\S\n]*+$
            )
          push:
            - match: $|(?<=\n)
              pop: true
            - include: inline
  block_raw:
    - match: '\G([ ]{4}|\t).*$\n?'
      scope: markup.raw.block.markdown
  bold:
    - match: |-
        (?x)
        (\*\*|__)(?=\S)                  # Open
        (?=
          (
            <[^>]*+>                     # HTML tags
            | (?<raw>`+)([^`]|(?!(?<!`)\k<raw>(?!`))`)*+\k<raw>
                                         # Raw
            | \\[\\`*_{}\[\]()#.!+\->]?+ # Escapes
            | \[
            (
                (?<square>               # Named group
                  [^\[\]\\]              # Match most chars
                  | \\.                  # Escaped chars
                  | \[ \g<square>*+ \]   # Nested brackets
                )*+
              \]
              (
                (                        # Reference Link
                  [ ]?                   # Optional space
                  \[[^\]]*+\]            # Ref name
                )
                | (                      # Inline Link
                  \(                     # Opening paren
                    [^\S\n]*+              # Optional whitespace
                    <?(.*?)>?            # URL
                    [^\S\n]*+              # Optional whitespace
                    (                    # Optional Title
                      (?<title>['"])
                      (.*?)
                      \k<title>
                    )?
                  \)
                )
              )
            )
            | (?!(?<=\S)\1).             # Everything besides
                                         # style closer
          )++
          (?<=\S)\1                      # Close
        )
      captures:
        1: punctuation.definition.bold.markdown
      push:
        - meta_scope: markup.bold.markdown
        - match: (?<=\S)(\1)
          captures:
            1: punctuation.definition.bold.markdown
          pop: true
        - match: "(?=<[^>]*?>)"
          push:
            - include: scope:text.html.handlebars
            - match: (?<=>)
              pop: true
        - include: escape
        - include: ampersand
        - include: bracket
        - include: raw
        - include: italic
        - include: strike
        - include: image-inline
        - include: link-inline
        - include: link-inet
        - include: link-email
        - include: image-reference
        - include: link-reference-literal
        - include: link-reference
  bracket:
    - match: '<(?![a-z/?\$!])'
      comment: |
        Markdown will convert this for us. We match it so that the
                HTML grammar will not mark it up as invalid.
      scope: meta.other.valid-bracket.markdown
  escape:
    - match: '\\[-`*_#+.!(){}\[\]\\>]'
      scope: constant.character.escape.markdown
  heading:
    - match: '\G(#{1})(?!#)\s*(?=\S)'
      captures:
        1: punctuation.definition.heading.markdown
      push:
        - meta_scope: markup.heading.markdown markup.heading.1.markdown
        - match: '\s*(#*)$\n?'
          captures:
            1: punctuation.definition.heading.markdown
          pop: true
        - include: inline
    - match: '\G(#{2})(?!#)\s*(?=\S)'
      captures:
        1: punctuation.definition.heading.markdown
      push:
        - meta_scope: markup.heading.markdown markup.heading.2.markdown
        - match: '\s*(#*)$\n?'
          captures:
            1: punctuation.definition.heading.markdown
          pop: true
        - include: inline
    - match: '\G(#{3})(?!#)\s*(?=\S)'
      captures:
        1: punctuation.definition.heading.markdown
      push:
        - meta_scope: markup.heading.markdown markup.heading.3.markdown
        - match: '\s*(#*)$\n?'
          captures:
            1: punctuation.definition.heading.markdown
          pop: true
        - include: inline
    - match: '\G(#{4})(?!#)\s*(?=\S)'
      captures:
        1: punctuation.definition.heading.markdown
      push:
        - meta_scope: markup.heading.markdown markup.heading.4.markdown
        - match: '\s*(#*)$\n?'
          captures:
            1: punctuation.definition.heading.markdown
          pop: true
        - include: inline
    - match: '\G(#{5})(?!#)\s*(?=\S)'
      captures:
        1: punctuation.definition.heading.markdown
      push:
        - meta_scope: markup.heading.markdown markup.heading.5.markdown
        - match: '\s*(#*)$\n?'
          captures:
            1: punctuation.definition.heading.markdown
          pop: true
        - include: inline
    - match: '\G(#{6})(?!#)\s*(?=\S)'
      captures:
        1: punctuation.definition.heading.markdown
      push:
        - meta_scope: markup.heading.markdown markup.heading.6.markdown
        - match: '\s*(#*)$\n?'
          captures:
            1: punctuation.definition.heading.markdown
          pop: true
        - include: inline
  image-inline:
    - match: |-
        (?x:
         \!                    # Images start with !
         (\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*+)(\])
                               # Match the link text.
         ([ ])?                # Space not allowed
         (\()                  # Opening paren for url
           (<?)(\S+?)(>?)      # The url
           [^\S\n]*              # Optional whitespace
           (?:
               ((\().+?(\)))   # Match title in parens…
             | ((").+?("))     # or in quotes.
           )?                  # Title is optional
           \s*                 # Optional whitespace
         (\))
        )
      scope: meta.image.inline.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.description.markdown
        4: punctuation.definition.string.end.markdown
        5: invalid.illegal.whitespace.markdown
        6: punctuation.definition.metadata.markdown
        7: punctuation.definition.link.markdown
        8: markup.underline.link.image.markdown
        9: punctuation.definition.link.markdown
        10: string.other.link.description.title.markdown
        11: punctuation.definition.string.markdown
        12: punctuation.definition.string.markdown
        13: string.other.link.description.title.markdown
        14: punctuation.definition.string.markdown
        15: punctuation.definition.string.markdown
        16: punctuation.definition.metadata.markdown
  image-reference:
    - match: '\!(\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*)(\])[ ]?(\[)(.*?)(\])'
      scope: meta.image.reference.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.description.markdown
        4: punctuation.definition.string.begin.markdown
        5: punctuation.definition.constant.markdown
        6: constant.other.reference.link.markdown
        7: punctuation.definition.constant.markdown
  inline:
    - include: escape
    - include: ampersand
    - include: bracket
    - include: raw
    - include: bold
    - include: italic
    - include: strike
    - include: line-break
    - include: image-inline
    - include: link-inline
    - include: link-inet
    - include: link-email
    - include: image-reference
    - include: link-reference-literal
    - include: link-reference
    - include: latex-inline
  italic:
    - match: |-
        (?x)
        (\*|_)(?=\S)                         # Open
        (?=
          (
              <[^>]*+>              # HTML tags
            | (?<raw>`+)([^`]|(?!(?<!`)\k<raw>(?!`))`)*+\k<raw>
                                             # Raw
            | \\[\\`*_{}\[\]()#.!+\->]?+  # Escapes
            | \[
            (
                    (?<square>         # Named group
                  [^\[\]\\]                  # Match most chars
                      | \\.                  # Escaped chars
                      | \[ \g<square>*+ \]  # Nested brackets
                    )*+
              \]
              (
                (                            # Reference Link
                  [ ]?                       # Optional space
                  \[[^\]]*+\]                # Ref name
                )
                | (                          # Inline Link
                  \(                         # Opening paren
                    [^\S\n]*+                  # Optional whtiespace
                    <?(.*?)>?          # URL
                    [^\S\n]*+                  # Optional whtiespace
                    (                        # Optional Title
                      (?<title>['"])
                      (.*?)
                      \k<title>
                    )?
                  \)
                )
              )
            )
            | \1\1                        # Must be bold closer
            | (?!(?<=\S)\1).           # Everything besides
                                          # style closer
          )++
          (?<=\S)\1                    # Close
        )
      captures:
        1: punctuation.definition.italic.markdown
      push:
        - meta_scope: markup.italic.markdown
        - match: (?<=\S)(\1)((?!\1)|(?=\1\1))
          captures:
            1: punctuation.definition.italic.markdown
          pop: true
        - match: "(?=<[^>]*?>)"
          push:
            - include: scope:text.html.handlebars
            - match: (?<=>)
              pop: true
        - include: escape
        - include: ampersand
        - include: bracket
        - include: raw
        - include: bold
        - include: strike
        - include: image-inline
        - include: link-inline
        - include: link-inet
        - include: link-email
        - include: image-reference
        - include: link-reference-literal
        - include: link-reference
  line-break:
    - match: " {2,}$"
      scope: meta.dummy.line-break
  link-email:
    - match: '(<)((?:mailto:)?[-.\w]+@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)(>)'
      scope: meta.link.email.lt-gt.markdown
      captures:
        1: punctuation.definition.link.markdown
        2: markup.underline.link.markdown
        4: punctuation.definition.link.markdown
  link-inet:
    - match: (<)((?:https?|ftp)://.*?)(>)
      scope: meta.link.inet.markdown
      captures:
        1: punctuation.definition.link.markdown
        2: markup.underline.link.markdown
        3: punctuation.definition.link.markdown
  link-inline:
    - match: |-
        (?x:
         (\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*+)(\])
                               # Match the link text.
         ([ ])?                # Space not allowed
         (\()                  # Opening paren for url
           (<?)(.*?)(>?)       # The url
           [^\S\n]*              # Optional whitespace
           (?:
               ((\().+?(\)))   # Match title in parens…
             | ((").+?("))     # or in quotes.
           )?                  # Title is optional
           \s*                 # Optional whitespace
         (\))
        )
      scope: meta.link.inline.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.title.markdown
        4: punctuation.definition.string.end.markdown
        5: invalid.illegal.whitespace.markdown
        6: punctuation.definition.metadata.markdown
        7: punctuation.definition.link.markdown
        8: markup.underline.link.markdown
        9: punctuation.definition.link.markdown
        10: string.other.link.description.title.markdown
        11: punctuation.definition.string.begin.markdown
        12: punctuation.definition.string.end.markdown
        13: string.other.link.description.title.markdown
        14: punctuation.definition.string.begin.markdown
        15: punctuation.definition.string.end.markdown
        16: punctuation.definition.metadata.markdown
  link-reference:
    - match: '(\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*)(\]) ?(\[)([^\]]*)(\])'
      scope: meta.link.reference.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.title.markdown
        4: punctuation.definition.string.end.markdown
        5: punctuation.definition.constant.begin.markdown
        6: constant.other.reference.link.markdown
        7: punctuation.definition.constant.end.markdown
  link-reference-literal:
    - match: '(\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*)(\]) ?(\[)(\])'
      scope: meta.link.reference.literal.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.title.markdown
        4: punctuation.definition.string.end.markdown
        5: punctuation.definition.constant.begin.markdown
        6: punctuation.definition.constant.end.markdown
  list-paragraph:
    - match: \G\s+(?=\S)
      push:
        - meta_scope: meta.paragraph.list.markdown
        - match: ^\s*$
          pop: true
        - match: '^\s{0,4}([*+-]|([0-9]+)\.)(?=\s)'
          captures:
            1: punctuation.definition.list_item.markdown
            2: punctuation.definition.list_item.number.markdown
        - include: inline
  raw:
    - include: latex-display
    - match: '(`+)([^`]|(?!(?<!`)\1(?!`))`)*+(\1)'
      scope: markup.raw.inline.markdown
      captures:
        1: punctuation.definition.raw.markdown
        3: punctuation.definition.raw.markdown
  separator:
    - match: '\G[ ]{,3}([-*_])([ ]{,2}\1){2,}[^\S\n]*$\n?'
      scope: meta.separator.markdown
  strike:
    - match: |-
        (?x)
        (~~)(?=\S)                         # Open
        (?=
          (
              <[^>]*+>              # HTML tags
            | (?<raw>`+)([^`]|(?!(?<!`)\k<raw>(?!`))`)*+\k<raw>
                                             # Raw
            | \\[\\`*_{}\[\]()#.!+\->]?+  # Escapes
            | \[
            (
                    (?<square>         # Named group
                  [^\[\]\\]                  # Match most chars
                      | \\.                  # Escaped chars
                      | \[ \g<square>*+ \]  # Nested brackets
                    )*+
              \]
              (
                (                            # Reference Link
                  [ ]?                       # Optional space
                  \[[^\]]*+\]                # Ref name
                )
                | (                          # Inline Link
                  \(                         # Opening paren
                    [^\S\n]*+                  # Optional whtiespace
                    <?(.*?)>?          # URL
                    [^\S\n]*+                  # Optional whtiespace
                    (                        # Optional Title
                      (?<title>['"])
                      (.*?)
                      \k<title>
                    )?
                  \)
                )
              )
            )
            | \1\1                        # Must be bold closer
            | (?!(?<=\S)\1).           # Everything besides
                                          # style closer
          )++
          (?<=\S)\1                    # Close
        )
      captures:
        1: punctuation.definition.strike.markdown
      push:
        - meta_scope: markup.strike.markdown
        - match: (?<=\S)(\1)((?!\1)|(?=\1\1))
          captures:
            1: punctuation.definition.strike.markdown
          pop: true
        - match: "(?=<[^>]*?>)"
          push:
            - include: scope:text.html.handlebars
            - match: (?<=>)
              pop: true
        - include: escape
        - include: ampersand
        - include: bracket
        - include: raw
        - include: bold
        - include: italic
        - include: image-inline
        - include: link-inline
        - include: link-inet
        - include: link-email
        - include: image-reference
        - include: link-reference-literal
        - include: link-reference

  latex-inline:
    - match: \\\$
    - match: |-
        (?x)
        (\$)(?=[^\s\$])
        (?=
          (?:
            \\\\
            |\\\$
            |[^\$]
          )*?
          \S\$(?:[^a-zA-Z0-9]|$)
        )
      scope: string.other.math.latex punctuation.definition.string.begin.latex
      push:
        - meta_scope: text.tex.latex meta.environment.math.latex
        - include: scope:text.tex.latex#macros
        - include: scope:text.tex.latex#math-content
        - match: \$
          scope: string.other.math.latex punctuation.definition.string.end.latex
          pop: true

  latex-display:
    - match: \$\$
      scope: string.other.math.latex punctuation.definition.string.begin.latex
      push:
        - meta_scope: text.tex.latex meta.environment.math.latex
        - include: scope:text.tex.latex#macros
        - include: scope:text.tex.latex#math-content
        - match: \$\$
          scope: string.other.math.latex punctuation.definition.string.end.latex
          pop: true
